{"version":3,"sources":["src/javascript/index.js"],"names":["Player","node","root","document","querySelector","$","selector","$$","querySelectorAll","songList","currentIndex","audio","Audio","lyricsArr","lyricIndex","start","bind","fetch","then","res","json","data","console","log","loadSong","self","onclick","classList","contains","pause","remove","add","setAttribute","play","length","playSong","ontimeupdate","parseInt","currentTime","locateLyric","setProgressBar","swiper","Swiper","on","songObj","innerText","title","author","albumn","src","url","onloadedmetadata","formateTime","duration","loadLyric","oncanplaythrough","lyric","lrc","setLyrics","window","lyrics","nextLineTime","setLyricToCenter","fragment","createDocumentFragment","split","filter","str","match","forEach","line","replace","t","milliseconds","slice","push","trim","sort","v1","v2","createElement","appendChild","innerHTML","translateY","offsetTop","offsetHeight","style","transform","percent","width","secondsTotal","minutes","seconds","p"],"mappings":"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","file":"javascript.19a21263.js","sourceRoot":"..","sourcesContent":["// import './icons.js'\r\n// import Swiper from './swiper.js'\r\n\r\nclass Player {\r\n    constructor(node) {\r\n        this.root = typeof node === 'string' ? document.querySelector(node) : node\r\n        this.$ = selector => this.root.querySelector(selector)\r\n        this.$$ = selector => this.root.querySelectorAll(selector)\r\n        this.songList = []\r\n        this.currentIndex = 0\r\n        this.audio = new Audio()\r\n        this.lyricsArr = []\r\n        this.lyricIndex = -1\r\n\r\n        this.start()\r\n        this.bind()\r\n\r\n    }\r\n    start() {\r\n        fetch('https://jirengu.github.io/data-mock/huawei-music/music-list.json')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.songList = data\r\n                this.loadSong()\r\n            })\r\n    }\r\n\r\n    bind() {\r\n        let self = this\r\n        this.$('.btn-play-pause').onclick = function() {\r\n            if (this.classList.contains('playing')) {\r\n                self.audio.pause()\r\n                this.classList.remove('playing')\r\n                this.classList.add('pause')\r\n                this.querySelector('use').setAttribute('xlink:href', '#icon-play')\r\n            } else if (this.classList.contains('pause')) {\r\n                self.audio.play()\r\n                this.classList.remove('pause')\r\n                this.classList.add('playing')\r\n                this.querySelector('use').setAttribute('xlink:href', '#icon-pause')\r\n            }\r\n        }\r\n        this.$('.btn-pre').onclick = function() {\r\n            console.log('pre')\r\n            self.currentIndex = (self.songList.length + self.currentIndex - 1) % self.songList.length\r\n            self.loadSong()\r\n            self.playSong()\r\n        }\r\n\r\n        this.$('.btn-next').onclick = function() {\r\n            self.currentIndex = (self.currentIndex + 1) % self.songList.length\r\n            self.loadSong()\r\n            self.playSong()\r\n        }\r\n\r\n        this.audio.ontimeupdate = function() {\r\n            console.log(parseInt(self.audio.currentTime * 1000))\r\n            self.locateLyric()\r\n            self.setProgressBar()\r\n        }\r\n\r\n        let swiper = new Swiper(this.$('.panels'))\r\n        swiper.on('swipLeft', function() {\r\n            this.classList.remove('panel1')\r\n            this.classList.add('panel2')\r\n            console.log('left')\r\n        })\r\n\r\n        swiper.on('swipRight', function() {\r\n            this.classList.remove('panel2')\r\n            this.classList.add('panel1')\r\n            console.log('right')\r\n        })\r\n    }\r\n\r\n\r\n    loadSong() {\r\n        let songObj = this.songList[this.currentIndex]\r\n        this.$('.header h1').innerText = songObj.title\r\n        this.$('.header p').innerText = songObj.author + '-' + songObj.albumn\r\n        this.audio.src = songObj.url\r\n        this.audio.onloadedmetadata = () => this.$('.time-end').innerText = this.formateTime(this.audio.duration)\r\n\r\n        this.loadLyric()\r\n    }\r\n\r\n    playSong() {\r\n        this.audio.oncanplaythrough = () => this.audio.play()\r\n    }\r\n\r\n\r\n    loadLyric() {\r\n        fetch(this.songList[this.currentIndex].lyric)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data.lrc.lyric)\r\n                this.setLyrics(data.lrc.lyric)\r\n                window.lyrics = data.lrc.lyric\r\n            })\r\n    }\r\n\r\n    locateLyric() {\r\n        console.log('locateLyric')\r\n        let currentTime = this.audio.currentTime * 1000\r\n        let nextLineTime = this.lyricsArr[this.lyricIndex + 1][0]\r\n        if (currentTime > nextLineTime && this.lyricIndex < this.lyricsArr.length - 1) {\r\n            this.lyricIndex++\r\n                let node = this.$('[data-time=\"' + this.lyricsArr[this.lyricIndex][0] + '\"]')\r\n            if (node) this.setLyricToCenter(node)\r\n            this.$$('.panel-effect .lyric p')[0].innerText = this.lyricsArr[this.lyricIndex][1]\r\n            this.$$('.panel-effect .lyric p')[1].innerText = this.lyricsArr[this.lyricIndex + 1] ? this.lyricsArr[this.lyricIndex + 1][1] : ''\r\n\r\n        }\r\n    }\r\n\r\n    setLyrics(lyrics) {\r\n        this.lyricIndex = 0\r\n        let fragment = document.createDocumentFragment()\r\n        let lyricsArr = []\r\n        this.lyricsArr = lyricsArr\r\n        lyrics.split(/\\n/)\r\n            .filter(str => str.match(/\\[.+?\\]/))\r\n            .forEach(line => {\r\n                let str = line.replace(/\\[.+?\\]/g, '')\r\n                line.match(/\\[.+?\\]/g).forEach(t => {\r\n                    t = t.replace(/[\\[\\]]/g, '')\r\n                    let milliseconds = parseInt(t.slice(0, 2)) * 60 * 1000 + parseInt(t.slice(3, 5)) * 1000 + parseInt(t.slice(6))\r\n                    lyricsArr.push([milliseconds, str])\r\n                })\r\n            })\r\n\r\n        lyricsArr.filter(line => line[1].trim() !== '').sort((v1, v2) => {\r\n            if (v1[0] > v2[0]) {\r\n                return 1\r\n            } else {\r\n                return -1\r\n            }\r\n        }).forEach(line => {\r\n            let node = document.createElement('p')\r\n            node.setAttribute('data-time', line[0])\r\n            node.innerText = line[1]\r\n            fragment.appendChild(node)\r\n        })\r\n        this.$('.panel-lyrics .container').innerHTML = ''\r\n        this.$('.panel-lyrics .container').appendChild(fragment)\r\n    }\r\n\r\n\r\n\r\n    setLyricToCenter(node) {\r\n        console.log(node)\r\n        let translateY = node.offsetTop - this.$('.panel-lyrics').offsetHeight / 2\r\n        translateY = translateY > 0 ? translateY : 0\r\n        this.$('.panel-lyrics .container').style.transform = `translateY(-${translateY}px)`\r\n        this.$$('.panel-lyrics p').forEach(node => node.classList.remove('current'))\r\n        node.classList.add('current')\r\n    }\r\n\r\n\r\n\r\n    setProgressBar() {\r\n        console.log('set setProgerssBar')\r\n        let percent = (this.audio.currentTime * 100 / this.audio.duration) + '%'\r\n        console.log(percent)\r\n        this.$('.bar .progress').style.width = percent\r\n        this.$('.time-start').innerText = this.formateTime(this.audio.currentTime)\r\n        console.log(this.$('.bar .progress').style.width)\r\n    }\r\n\r\n\r\n    formateTime(secondsTotal) {\r\n        let minutes = parseInt(secondsTotal / 60)\r\n        minutes = minutes >= 10 ? '' + minutes : '0' + minutes\r\n        let seconds = parseInt(secondsTotal % 60)\r\n        seconds = seconds >= 10 ? '' + seconds : '0' + seconds\r\n        return minutes + ':' + seconds\r\n    }\r\n\r\n}\r\n\r\nwindow.p = new Player('#player')"]}